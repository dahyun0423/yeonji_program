sscanf : 문자열 s로부터 지정된 형식을 수치로 읽어서 변수에 저장
키보드에서 입력받는게 아니라 문자열에서 입력받는

100으로 부터 정수로 입력받을 수 있는

sprintf : 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
//524 -> 525

int main() {
	char instring[] = "file 12";
	char name[10]; int number;

	/*sscanf(instring, "%s %d", name, &number);*/
	scanf("%s %d", name, &number);
	printf("name = %s \n", name);
	printf("number = %d \n", number);
	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {
	char buffer[50];
	int x = 10, y = 20, result;
	result = x + y;
	sprintf(buffer, "%d + %d = %d\n", x, y, result);
	printf("%s\n", buffer);
}

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//526 전용함수사용
int main() {
	char s1[] = "100", s2[] = "12.93", buffer[100];
	int i;
	double d;

	//아래 두 라인을 sscanf로 수정

	i = atoi(s1);		//s1 문자열의 내용을 정수로 변환한 값을 return
	/*sscanf(s1, "%d", &i);*/
	d = atof(s2);		//s2 문자열의 내용을 실수로 변환한 값을 return
	/*sscanf(s2, "%d", &d);*/


	printf("%d %f\n", i, d);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//526 전용함수사용
int main() {
	char s1[] = "100", s2[] = "12.93", buffer[100];
	int i;
	double d;

	//아래 두 라인을 sscanf로 수정

	/*i = atoi(s1);	*/	//s1 문자열의 내용을 정수로 변환한 값을 return
	sscanf(s1, "%d", &i);
	//d = atof(s2);		//s2 문자열의 내용을 실수로 변환한 값을 return
	sscanf(s2, "%lf", &d);


	printf("%d %f\n", i, d);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//526 전용함수사용
int main() {
	char s1[] = "a", s2[] = "b", buffer[100];
	int i;
	double d;

	//아래 두 라인을 sscanf로 수정

	i = atoi(s1);		//s1 문자열의 내용을 정수로 변환한 값을 return
	//sscanf(s1, "%d", &i);
	d = atof(s2);		//s2 문자열의 내용을 실수로 변환한 값을 return
	/*sscanf(s2, "%lf", &d);*/


	printf("%d %f\n", i, d);

	return 0;
}
-> 이케하면 0 0.000 이런식으로 나와
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.529(545)
int main() {
	int i;
	char menu[5][10] = {
		"init",
		"open",
		"close",
		"read",
		"write"
	};

	for (i = 0; i < 5; i++)
		printf(" %d  번째 메뉴 : %s \n", i, menu[i]);

	return 0;
}

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.529(545)
int main() {
	int i;
	char menu[5][10] = {
		"1.init",
		"2.open",
		"3.close",
		"4.read",
		"5.write"
	};

	for (i = 0; i < 5; i++)
		printf("%s\n", menu[i]);
//menu[i] 이 자체가 문자열이다. 

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.529(545) 수정버전 
int main() {
	int i,number = 0;//문자열의 배열 
	char menu[5][10] = {
		"1.init",
		"2.open",
		"3.close",
		"4.read",
		"5.write"
	};

	for (i = 0; i < 5; i++)
		printf("%s\n", menu[i]);
	//menu[i] 이 자체가 문자열이다. 

	//메뉴 출력 후 번호 선택하는 기능 추가(잘못된 번호 선택하면 계속 물어봄)
	//1~5범위 선택하면 선택된 메뉴 항목 출력
	//1.init
	//2.open
	//3.close
	//4.read
	//5.write
	//메뉴 선택 : 6
	//메뉴 선택 : 1
	//1.init 선택됨

	
	
	do {
		printf("메뉴 선택 : ");
		scanf("%d", &number);

	} while (number < 1 || number >5);
	printf("%s 선택 \n", menu[number - 1]);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
문자열의 배열 
문자열 여러개를 저장하는 방법 - > 문자열의 배열

문자 포인터 배열을 사용하는 방법
 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.529 stringarray2.c
int main() {
	int i;
	char fruits[3][20];
	for (i = 0; i < 3; i++) {
		printf("과일 이름을 입력하시오 : ");
		scanf("%s", fruits[i]);
	}
	for(i = 0;i<3;i++)
		printf(" %d번째 과일  : %s\n", i, fruits[i]);
		return 0;

}

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//560 student1.c
struct student {	//구조체 선언
	int number;		//구조체 멤버
	char name[10];
	double grade;
};
int main() {
	struct student s;		//구조체 변수 선언
	s.number = 20230001;//'구조체변수명. 멤버명'으로 접근;
		strcpy(s.name,  "홍길동"); //s.name = "홍길동"; 불가능
	//s.name = "홍길동"; // s. name 이라는 것은 주소 값, 즉 그릇이 아닌데 어떻게 집어넣어? 그래서 불가능하다.
	s.grade = 4.3;

	printf("학번 : %d\n", s.number);
	printf("이름 : %s\n", s.name);
	printf("학점 : %.2f\n", s.grade);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//560 student1.c
struct student {	//구조체 선언
	int number;		//구조체 멤버
	char name[10];
	double grade;
};

int main() {
	//. 연산자가 대부분 이겨. 괄호는 못이기지만 우선순위 헷갈리면 괄호쳐
	struct student s;

	printf("학번 : ");
	scanf("%d",&(s.number));
	
	printf("이름 : ");
	scanf("%s", s.name);
	
	printf("학점 : ");
	scanf("%lf", &(s.grade));

	printf("학번 : %d\n", s.number);
	printf("이름 : %s\n", s.name);
	printf("학점 : %lf\n", s.grade);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//585(1) id, title, author를 입력받아 출력하는 것으로 수정
struct book {	//구조체 선언
	char title[100];
	char author[100];
	int id;
};

int main() {
	struct book s;

	printf("ID : ");
	scanf("%d", &s.id);

	printf("제목 : ");
	scanf("%s", s.title);
	
	printf("저자 : ");
	scanf("%s", s.author);

	printf("%d %s %s\n", s.id, s.title, s.author);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.555(572) 구조체 변수의 대입과 비교
//nested_struct.c

struct book {	
	char title[100];
	char author[100];
	int id;
};

int main() {
	struct book s,t;

	printf("ID : "); scanf("%d", &s.id);

	printf("제목 : "); scanf("%s", s.title);
	
	printf("저자 : "); scanf("%s", s.author);
	
	t = s;	//구조체 변수 대입 가능
	printf("%d %s %s\n", s.id, s.title, s.author);
	printf("%d %s %s\n", t.id, t.title, t.author);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//p.555(572) 구조체 변수의 대입과 비교
//nested_struct.c

struct book {	
	char title[100];
	char author[100];
	int id;
};

int main() {
	struct book s,t;
	printf("%d\n ", sizeof(struct book)); //100 + 100 + 4(int)

	printf("ID : "); scanf("%d", &s.id);

	printf("제목 : "); scanf("%s", s.title);
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
struct book {	
	char ch;		
	char title[100];
	char author[100];
	int id;		//4의 배수의 자리에만 붙어서 ch가 1바이트여도 뒤에 3바이트는 버린다고 생각해서 
					// 그래서 이렇게해서 sizeof 했을 때는 208바이트가 나오는 것임 205가 아니라
};

int main() {
	struct book s,t;
	printf("%d\n ", sizeof(struct book)); //100 + 100 + 4(int) + char(1) + (버리는 3)

	
	printf("저자 : "); scanf("%s", s.author);
	
	t = s;	//구조체 변수 대입 가능
	printf("%d %s %s\n", s.id, s.title, s.author);
	printf("%d %s %s\n", t.id, t.title, t.author);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
if ( t == s) // 오류 떠 구조체 변수끼리는 비교 불가능하다.

//구조체 변수 비교연산자 적용 불가, 각 멤버별 (적절하게) 비교해야 함.
if ( t. id == s.id && strcmp(t.title , s. title) == 0 && .... ) 이런 식으로 해야해
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
구조체가 구조체를 멤버로 가질 수 있다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//558, 574 구조체의 배열
#define SIZE 3
struct student {
	int number;
	char name[20];
	double grade;
};

int main() {
	struct student list[SIZE];
	int i;
	for (i = 0; i < SIZE; i++) {
		printf("학번 : "); scanf("%d", &list[i].number);
		printf("이름 : "); scanf("%s", list[i].name);
		printf("학점 : "); scanf("%lf", &list[i].grade);
	}
	for (i = 0; i < SIZE; i++)
		printf("학번 %d 이름 %s 학점 %lf\n", list[i].number, list[i].name, list[i].grade);
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//558, 574 구조체의 배열
#define SIZE 3
struct student {
	int number;
	char name[20];
	double grade;
};

int main() {
	struct student list[SIZE] = { {1, "Park", 3.42}, { 2,"Kim",4.31 }, { 3,"Lee",2.98 } };
	int i;
	//for (i = 0; i < SIZE; i++) { 
	//	printf("학번 : "); scanf("%d", &list[i].number);
	//	printf("이름 : "); scanf("%s", list[i].name);
	//	printf("학점 : "); scanf("%lf", &list[i].grade);
	//}
	for (i = 0; i < SIZE; i++)
		printf("학번 %d 이름 %s 학점 %lf\n", list[i].number, list[i].name, list[i].grade);

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> //atoi, atof 함수
//558, 574 구조체의 배열
#define SIZE 3
struct student {
	int number;
	char name[20];
	double grade;
};

int main() {
	struct student list[SIZE] = { {1, "Park", 3.42}, { 2,"Kim",4.31 }, { 3,"Lee",2.98 } };
	int i;
	//for (i = 0; i < SIZE; i++) { 
	//	printf("학번 : "); scanf("%d", &list[i].number);
	//	printf("이름 : "); scanf("%s", list[i].name);
	//	printf("학점 : "); scanf("%lf", &list[i].grade);
	//}
	/*for (i = 0; i < SIZE; i++)
		printf("학번 %d 이름 %s 학점 %lf\n", list[i].number, list[i].name, list[i].grade);*/


	// 이름을 입력받아 (입력받을 별도의 문자열 필요) 해당 학생의 number와 grade를 출력
	char input[10];
	
	printf("이름 입력 : ");
	scanf("%s", input);
	
	for (i = 0; i < SIZE; i++) {

		if (strcmp(input, list[i].name) == 0)
			printf("%s의 number = %d, grade = %lf", list[i].number, list[i].grade);
	}

	return 0;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//p.530
//(1)english, korean 문자열 (30글자) 멤버를 가지는 구조체dictionary 선언
//(2)5개 요소를 가지는 dictionary 구조체 배열 선언 + 교재 내용으로 초기화
//(3) 영단어 입력받아 한글 단어 출력
//(4) return 0; 사용하지 말고 : 사전에서 발견되지 않았습니다." 출력되도록 수정

struct dictionary {
	char english[30], korean[30];
};

int main() {

	struct dictionary dic[5] = { {"book", "gg"},  {"boy","소년"}, {"computer","컴퓨터"},{"laguage","언어"},{"rain","비"}};
	char word[30];
	int i, found = 0;

	printf("단어를 입력하시오 :");
	scanf("%s", word);

	for (i = 0; i < 5; i++)
		if (strcmp(word, dic[i].english) == 0) {
			printf("%s : %s\n", word, dic[i].korean);
			found = 1;
			break;
		}
	if (!found)
		printf("사전에서 발견x \n");


}
