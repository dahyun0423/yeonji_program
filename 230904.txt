#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main() {
	int n;
	printf("정수 입력 : ");
	scanf("%d",&n);

	printf("입력된 정수 = %d\n", n);

	return 0;
}
-----------------------------------
들여쓰기 : ctrl + k + f(ormat)
전체선택 : ctrl + A
-----------------------------------

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
//정수를 입력받아
int main() {
	int n = 0;
	printf("정수를 입력하세요 : ");
	scanf("%d", &n);

	if (n % 2 == 0) {
		printf("%d 은 짝수입니다",n);
	}
	else {
		printf("%d은 홀수입니다", n);
	}

	/*else if (n % 2 != 0) {
		printf("%d은 홀수입니다",n);
	}*/
		
}
// 산술 연산 + - * / % 
// %는 정수에서만 가능함.
// 비교 연산== != > <  >=  <=   
// 논리 연산  &&  ||  !   
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
>>>>진도 시작>>>>>
함수란 입력값을 정수값으로 입ㄹ겨해서 준다.
함수내에서 하는 일이 있ㄴㄴ데
입력갑과 축렵값이 중요한것 뿐만이 아닌 하는 일이 있다.


main함수
printf함수
scanf 함수
쓰기용으로 열수 없습니다
-> 프로그램이돌고 있을때 다시 컴파일시켜서 실행시킬떄 나옴
이럴땐 프로그램 돌고있는거 삭제시켜서 컴파일 시키자



#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
//p.322 find_max.c

//<함수 정의>
int max(int x, int y) { // 여기 x y 이름은 녹즙기 이름같은 것/ 입구 이름을 지은 것
	if (x > y) // 명쾌한 전달을 위해 입구 이름정한 것 과 같음 (이거 저거 할 순 없잖슴..;;)
		return x;
	else 
		return y;  // 이 위에는 함수를 정의한다고 함.
}
int main() {
	int x, y, larger; // 지역(local)변수라고 사용함. 선언된 블락 안에서만 사용되는 변수 == 지역변수 (9장에서 나옴)
	printf("정수 2개 입력 : ");
	scanf("%d %d", &x, &y);
	larger = max(x, y); // max 라는 함수를 호출한다고 함. 
	printf("더 큰 값은 %d\n", larger);

	return 0;
}

//함수정의랑 지역변수 정의할때 이름이 같아도 상관없고 달라도 상관 없음
//int max(int a. int b); 이런식으로 해도 상관 노

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
// p. 325


int max(int x, int y) {
	if (x > y)
		return x;
	else
		return y;
}
int get_integer() {
	int value;
	printf("정수 입력 : ");
	scanf("%d", &value);
	return value;
}

int add(int x, int y) { // 얘도 입구 이름이라 지역변수랑 굳이 같을 필요는 X 
	return x + y;
}

//int main() {
//	int x = get_integer();
//	int y = get_integer();
//	printf("두 수의 합 = %d\n", add(x, y));
//	printf("두 큰 수 = %d\n", max(x, y));
//	return 0;
//}


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
//P.326 factorial.c
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int max(int x, int y) {
	if (x > y)
		return x;
	else
		return y;
}
int get_integer() {
	int value;
	printf("정수 입력 : ");
	scanf("%d", &value);
	return value;
}

int add(int x, int y) { // 얘도 입구 이름이라 지역변수랑 굳이 같을 필요는 X 
	return x + y;
}


long long factorial(int n) {
	/*long long i, result = 1;*/
	int i;
	long long result = 1;
// int로 쓴다면 result를 어느 범위서부터는 넘어가서 음수가 표현될것임.

표현한 범위를 넘어가서 음수를 왜 넘어가냐?
->카운터초시계 99999 되면 0으로 돌아가는 것 처럼
범위를 넘어가면 돌게 되어있어요 (컴퓨터는 음수로)


	for (i = 1; i <= n; i++)
		result = result * i;
	return result;
}
int main() {
	int n = get_integer();
	printf("%d! = %lld\n", n, factorial(n));
	return 0;
}